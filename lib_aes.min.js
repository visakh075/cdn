function fstr(str){var len,ext=str.length%16;return 0!=ext&&(str+=" ".repeat(16-ext)),str}function show_hex(Arr){for(var retVal="",m=0;m<Arr.length;m++)retVal+=" "+Arr[m].toString(16);console.log(retVal)}function gmul(a,b){for(var retVal=0,i=0;i<8;i++)1&b&&(retVal^=a),128&a?a=a<<1^283:a<<=1,b>>=1;return retVal}function i2h(val){var retVal=val.toString(16);return retVal.length%2&&(retVal="0"+retVal),retVal}function h2i(i){var retVal=0;return h_i=i.charCodeAt(0),retVal=h_i>96&&h_i<103?h_i-87:h_i>47&&h_i<58?h_i-48:0}function hs2iA(val){var retVal=[],len=val.length;if(len%2==0)for(var idx=0;idx<len/2;idx++)m=h2i(val.charAt(2*idx)),l=h2i(val.charAt(2*idx+1)),retVal.push(16*m+l);return retVal}function iA2h(arr){var retVal="";for(i=0;i<arr.length;i++)retVal+=i2h(arr[i]);return retVal}function s2iA(str){for(var length=str.length,retVal="",i=0;i<length;i++)retVal+=i2h(str.charCodeAt(i));return retVal}function s2hA(str){for(var length=str.length,retVal=[],i=0;i<length;i++)retVal.push(str.charCodeAt(i));return retVal}function h2s(hex){for(var retVal="",m=0;m<hex.length/2;m++)inhex=hex.substring(2*m,2*m+2),retVal+=String.fromCharCode(parseInt(inhex,16));return retVal}function hA2s(hex){for(var retVal="",m=0;m<hex.length;m++)retVal+=String.fromCharCode(hex[m]);return retVal}Sbox=new Uint8Array(256),Sbox=[99,124,119,123,242,107,111,197,48,1,103,43,254,215,171,118,202,130,201,125,250,89,71,240,173,212,162,175,156,164,114,192,183,253,147,38,54,63,247,204,52,165,229,241,113,216,49,21,4,199,35,195,24,150,5,154,7,18,128,226,235,39,178,117,9,131,44,26,27,110,90,160,82,59,214,179,41,227,47,132,83,209,0,237,32,252,177,91,106,203,190,57,74,76,88,207,208,239,170,251,67,77,51,133,69,249,2,127,80,60,159,168,81,163,64,143,146,157,56,245,188,182,218,33,16,255,243,210,205,12,19,236,95,151,68,23,196,167,126,61,100,93,25,115,96,129,79,220,34,42,144,136,70,238,184,20,222,94,11,219,224,50,58,10,73,6,36,92,194,211,172,98,145,149,228,121,231,200,55,109,141,213,78,169,108,86,244,234,101,122,174,8,186,120,37,46,28,166,180,198,232,221,116,31,75,189,139,138,112,62,181,102,72,3,246,14,97,53,87,185,134,193,29,158,225,248,152,17,105,217,142,148,155,30,135,233,206,85,40,223,140,161,137,13,191,230,66,104,65,153,45,15,176,84,187,22],RSbox=new Uint8Array(256),RSbox=[82,9,106,213,48,54,165,56,191,64,163,158,129,243,215,251,124,227,57,130,155,47,255,135,52,142,67,68,196,222,233,203,84,123,148,50,166,194,35,61,238,76,149,11,66,250,195,78,8,46,161,102,40,217,36,178,118,91,162,73,109,139,209,37,114,248,246,100,134,104,152,22,212,164,92,204,93,101,182,146,108,112,72,80,253,237,185,218,94,21,70,87,167,141,157,132,144,216,171,0,140,188,211,10,247,228,88,5,184,179,69,6,208,44,30,143,202,63,15,2,193,175,189,3,1,19,138,107,58,145,17,65,79,103,220,234,151,242,207,206,240,180,230,115,150,172,116,34,231,173,53,133,226,249,55,232,28,117,223,110,71,241,26,113,29,41,197,137,111,183,98,14,170,24,190,27,252,86,62,75,198,210,121,32,154,219,192,254,120,205,90,244,31,221,168,51,136,7,199,49,177,18,16,89,39,128,236,95,96,81,127,169,25,181,74,13,45,229,122,159,147,201,156,239,160,224,59,77,174,42,245,176,200,235,187,60,131,83,153,97,23,43,4,126,186,119,214,38,225,105,20,99,85,33,12,125],Rcon=new Uint8Array(11),Rcon=[141,1,2,4,8,16,32,64,128,27,54],A=Array(),A[0]=Uint8Array.from([2,3,1,1]),A[1]=Uint8Array.from([1,2,3,1]),A[2]=Uint8Array.from([1,1,2,3]),A[3]=Uint8Array.from([3,1,1,2]),iA=Array(),iA[0]=Uint8Array.from([14,11,13,9]),iA[1]=Uint8Array.from([9,14,11,13]),iA[2]=Uint8Array.from([13,9,14,11]),iA[3]=Uint8Array.from([11,13,9,14]);class DataBlock{constructor(data){if(this.byte=Array(new Uint8Array(4),new Uint8Array(4),new Uint8Array(4),new Uint8Array(4)),this.His=new Array,"string"==typeof data)for(var i=0;i<4;i++)for(var j=0;j<4;j++)this.byte[j][i]=data.charCodeAt(4*i+j);if(data instanceof DataBlock)for(var i=0;i<4;i++)for(var j=0;j<4;j++)this.byte[i][j]=data.byte[i][j];if(data instanceof Array&&16==data.length)for(var i=0;i<16;i++)this.byte[i%4][parseInt(i/4)]=data[i]}getBlock(){for(var retVal="",i=0;i<4;i++)for(var j=0;j<4;j++)retVal+=String.fromCharCode(this.byte[j][i]);return retVal}getBlock_A(){for(var retVal=[],i=0;i<4;i++)for(var j=0;j<4;j++)retVal.push(this.byte[j][i]);return retVal}getBlock_hs(){for(var retVal="",r=0;r<4;r++)for(var c=0;c<4;c++)retVal+=i2h(this.byte[c][r]);return retVal}copy(from){for(var r=0;r<4;r++)for(var c=0;c<4;c++)this.byte[c][r]=from.byte[c][r]}Show_Block_M(){for(var i=0;i<4;i++)console.log(...this.byte[i])}Sub_Byte(){for(var r=0;r<4;r++)for(var c=0;c<4;c++)this.byte[r][c]=Sbox[this.byte[r][c]]}Inv_Sub_Byte(){for(var r=0;r<4;r++)for(var c=0;c<4;c++)this.byte[r][c]=RSbox[this.byte[r][c]]}Shift_Row(){for(var temp=new Uint8Array(4),r=0;r<4;r++){for(var c=0;c<4;c++)temp[c]=this.byte[r][c];for(var c=0;c<4;c++)this.byte[r][c]=temp[(c+r)%4]}}Inv_Shift_Row(){for(var temp=new Uint8Array(4),r=0;r<4;r++){for(var c=0;c<4;c++)temp[c]=this.byte[r][c];for(var c=0;c<4;c++)this.byte[r][c]=temp[(4+c-r)%4]}}Mix_Column(){for(var temp=new DataBlock(this),r=0;r<4;r++)for(var c=0;c<4;c++){for(var sum=0,idx=0;idx<4;idx++)sum^=gmul(A[r][idx],this.byte[idx][c]);temp.byte[r][c]=sum}for(var r=0;r<4;r++)for(var c=0;c<4;c++)this.byte[r][c]=temp.byte[r][c]}Inv_Mix_Column(){for(var temp=new DataBlock(this),r=0;r<4;r++)for(var c=0;c<4;c++){for(var sum=0,idx=0;idx<4;idx++)sum^=gmul(iA[r][idx],this.byte[idx][c]);temp.byte[r][c]=sum}for(var r=0;r<4;r++)for(var c=0;c<4;c++)this.byte[r][c]=temp.byte[r][c]}Add_Key(KeyBank,Round){for(var temp=new DataBlock(this),r=0;r<4;r++)for(var c=0;c<4;c++)temp.byte[r][c]=this.byte[r][c]^KeyBank.KeyWords[4*Round+c].byte[r];for(var r=0;r<4;r++)for(var c=0;c<4;c++)this.byte[r][c]=temp.byte[r][c]}Inv_Add_Key(KeyBank,Round){for(var temp=new DataBlock(this),r=0;r<4;r++)for(var c=0;c<4;c++)temp.byte[r][c]=this.byte[r][c]^KeyBank.KeyWords[4*(KeyBank.Nr-Round-1)+c].byte[r];for(var r=0;r<4;r++)for(var c=0;c<4;c++)this.byte[r][c]=temp.byte[r][c]}encrypt(KeyBank){this.Add_Key(KeyBank,0);for(var round=1;round<KeyBank.Nr-1;round++)this.Sub_Byte(),this.Shift_Row(),this.Mix_Column(),this.Add_Key(KeyBank,round);this.Sub_Byte(),this.Shift_Row(),this.Add_Key(KeyBank,KeyBank.Nr-1),this.His.push(["E",KeyBank.getKey()])}decrypt(KeyBank){this.Inv_Add_Key(KeyBank,0);for(var round=1;round<KeyBank.Nr-1;round++)this.Inv_Shift_Row(),this.Inv_Sub_Byte(),this.Inv_Add_Key(KeyBank,round),this.Inv_Mix_Column();this.Inv_Shift_Row(),this.Inv_Sub_Byte(),this.Inv_Add_Key(KeyBank,KeyBank.Nr-1),this.His.push(["D",KeyBank.getKey()])}}class KeyWord{constructor(word){if(this.byte=new Uint8Array(4),"string"==typeof word&&4==word.length)for(var bidx=0;bidx<4;bidx++)this.byte[bidx]=word.charCodeAt(bidx);if(word instanceof Array&&4==word.length)for(var bidx=0;bidx<4;bidx++)this.byte[bidx]=word[bidx];else if(word instanceof KeyWord)for(var bidx=0;bidx<4;bidx++)this.byte[bidx]=word.byte[bidx]}SubWord(){for(var bidx=0;bidx<4;bidx++)this.byte[bidx]=Sbox[this.byte[bidx]]}RotWord(){for(var temp=this.byte[0],bidx=0;bidx<3;bidx++)this.byte[bidx]=this.byte[bidx+1];this.byte[3]=temp}AddWord(word){if(word instanceof KeyWord)for(var i=0;i<4;i++)this.byte[i]^=word.byte[i]}}class KeyBank{constructor(Key){var retVal=0;if(this.KeyWords=Array(),"string"==typeof Key)switch(this.keylen=8*Key.length,this.keylen){case 128:case 192:case 256:this.Nk=this.keylen/32,this.Nr=this.Nk+7;for(var widx=0;widx<this.Nk;widx++)this.KeyWords.push(new KeyWord(Key.substring(4*widx,4*(widx+1))));this.KeyExpand();break;default:return retVal=1}if(Key instanceof Array){var retVal=0;switch(this.keylen=8*Key.length,this.keylen){case 128:case 192:case 256:this.Nk=this.keylen/32,this.Nr=this.Nk+7;for(var widx=0;widx<this.Nk;widx++)this.KeyWords.push(new KeyWord(Key.slice(4*widx,4*(widx+1))));this.KeyExpand();break;default:return retVal=1}}}KeyExpand(){for(var Nk=this.Nk,Nr=this.Nr,i=Nk;i<4*Nr;i++){var temp=new KeyWord(this.KeyWords[i-1]);i%Nk==0?(temp.RotWord(),temp.SubWord(),temp.byte[0]^=Rcon[i/Nk]):Nk>6&&i%Nk==4&&temp.SubWord(),temp.AddWord(this.KeyWords[i-Nk]),this.KeyWords[i]=temp}}getKey(){for(var retVal=new Array,i=0;i<4;i++)for(var j=0;j<4;j++)retVal.push(this.KeyWords[i].byte[j]);return retVal}getKeyAll(){for(var retVal=new Array,r=0;r<this.KeyWords.length/4;r++)for(var i=0;i<4;i++)for(var j=0;j<4;j++)retVal.push(this.KeyWords[4*r+i].byte[j]);return retVal}showKeyAll(){for(var r=0;r<this.KeyWords.length/4;r++){for(var round_Key="",i=0;i<4;i++)for(var j=0;j<4;j++)round_Key+=" "+i2h(this.KeyWords[4*r+i].byte[j]);console.log(round_Key)}}}class DataBank{constructor(data){if("string"==typeof data){data.length%16!=0&&(data+=" ".repeat(16-data.length%16)),this.Raw=data,this.DataBlocks=Array(),this.numBlocks=this.Raw.length/16;for(var dbi=0;dbi<this.numBlocks;dbi++)this.DataBlocks.push(new DataBlock(this.Raw.substring(16*dbi,16*(dbi+1))));this.iRaw=this.getBank_A()}else if(data instanceof Array){data=data.concat(Array(16-data.length%16).fill(0)),this.iRaw=data,this.numBlocks=this.iRaw.length/16,this.DataBlocks=Array();for(var dbi=0;dbi<this.numBlocks;dbi++)this.DataBlocks.push(new DataBlock(this.iRaw.slice(16*dbi,16*(dbi+1))));this.Raw=this.getBank()}this.His=new Array}encrypt(KeyBank){for(var dbi=0;dbi<this.numBlocks;dbi++)this.DataBlocks[dbi].encrypt(KeyBank),this.Raw=this.getBank(),this.iRaw=this.getBank_A();this.His.push(["E",KeyBank.getKey()])}decrypt(KeyBank){for(var dbi=0;dbi<this.numBlocks;dbi++)this.DataBlocks[dbi].decrypt(KeyBank),this.Raw=this.getBank(),this.iRaw=this.getBank_A();this.His.push(["D",KeyBank.getKey()])}getBank(){for(var retVal="",dbi=0;dbi<this.numBlocks;dbi++)retVal+=this.DataBlocks[dbi].getBlock();return retVal}getBank_A(){for(var retVal=new Array,dbi=0;dbi<this.numBlocks;dbi++)retVal=retVal.concat(this.DataBlocks[dbi].getBlock_A());return retVal}}